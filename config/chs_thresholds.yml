# guardian_ai_tool/config/chs_thresholds.yml
# This file stores language-specific reference ranges for raw Code Health Score (CHS)
# sub-metrics. These are used by the OSQICalculator to normalize raw values
# into a 0-1 scale before calculating the C_HS geometric mean.

# For each metric, define points that map raw values to normalized scores.
# The OSQICalculator can use linear interpolation between these points.
# Example:
# ideal_max: raw value at or below which the normalized score is 1.0
# acceptable_max: raw value at which the normalized score is (e.g.) 0.5
# poor_min: raw value at or above which the normalized score is 0.0

python:
  cyclomatic_complexity:
    ideal_max: 5       # Score 1.0 if raw_value <= 5
    acceptable_max: 10 # Score 0.5 if raw_value == 10 (example midpoint)
    poor_min: 15       # Score 0.0 if raw_value >= 15
                       # (Linear interpolation for values between these points)
  
  duplication_percentage: # Assuming lower is better
    ideal_max: 3.0     # Score 1.0 if raw_value <= 3.0%
    acceptable_max: 10.0 # Score 0.5 if raw_value == 10.0%
    poor_min: 25.0     # Score 0.0 if raw_value >= 25.0%

  # Example for a metric where higher is better (e.g., maintainability index if not already 0-100)
  # maintainability_index: # Assuming higher is better, scale 0-100
  #   poor_min_raw: 0      # Raw value at which normalized score is 0.0
  #   acceptable_min_raw: 60 # Raw value at which normalized score is 0.5
  #   ideal_min_raw: 85    # Raw value at or above which normalized score is 1.0

  # Add other CHS sub-metrics for Python as needed:
  # - cognitive_complexity:
  # - num_code_smells: (lower is better)
  # - etc.

# Add configurations for other languages if needed:
# javascript:
#   cyclomatic_complexity:
#     ideal_max: 7
#     acceptable_max: 12
#     poor_min: 20
#   # ...